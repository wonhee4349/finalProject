<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ac.usu.scholarship.mapper.StaffScholarshipStudentMapper">
	
	<resultMap type="kr.ac.usu.scholarship.vo.ScholarshipStudentVO" id="scholarshipStudentMap" autoMapping="true">
		<association property="student" javaType="kr.ac.usu.user.vo.StudentVO" autoMapping="true" />
		<association property="scholarship" javaType="kr.ac.usu.scholarship.vo.ScholarshipVO" autoMapping="true">
			<association property="scholarshipList" javaType="kr.ac.usu.scholarship.vo.ScholarshipListVO" autoMapping="true" />
		</association>
	</resultMap>
	
	<resultMap type="kr.ac.usu.scholarship.vo.ScholarshipVO" id="scholarshipListMap" autoMapping="true">
		<id property="schlshipNo" column="SCHLSHIP_NO"/>
		<association property="scholarshipList" javaType="kr.ac.usu.scholarship.vo.ScholarshipListVO" autoMapping="true"/>
	</resultMap>
	
	<resultMap type="kr.ac.usu.user.vo.StudentVO" id="studentMap" autoMapping="true">
		<id property="stdntNo" column="STDNT_NO"/>
		<association property="subject" javaType="kr.ac.usu.subject.vo.SubjectVO" autoMapping="true">
			<association property="college" javaType="kr.ac.usu.facilities.vo.CollegeVO" autoMapping="true"/>
		</association>
	</resultMap>
	
	<sql id="searchFrag">
		<where>
	    	<if test="simpleCondition neq null and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
	    		<choose>
	    			<when test="simpleCondition.searchType eq 'stdntNm'">
	    				INSTR(STDNT_NM, #{simpleCondition.searchWord}) > 0
	    			</when>
	    			<when test="simpleCondition.searchType eq 'stdntNo'">
	    				INSTR(STDNT_NO, #{simpleCondition.searchWord}) > 0
	    			</when>
	    			<when test="simpleCondition.searchType eq 'schoNm'">
	    				INSTR(SCHO_NM, #{simpleCondition.searchWord}) > 0
	    			</when>
	    			<otherwise>
	    				INSTR(STDNT_NM, #{simpleCondition.searchWord}) > 0
	    				OR
	    				INSTR(STDNT_NO, #{simpleCondition.searchWord}) > 0
	    				OR
	    				INSTR(SCHO_NM, #{simpleCondition.searchWord}) > 0
	    			</otherwise>
	    		</choose>
	    	</if>
	    </where>
	</sql>
	
	<sql id="listFromFrag">
		SELECT
		    DISTINCT D.SCHLSHIP_NO 
		    , B.STDNT_NO
		    , C.STDNT_NM
		    , SUBSTR(D.SEMSTR_NO, 1,4) SEMSTR_YEAR
		    , SUBSTR(D.SEMSTR_NO, 5,1) SEMSTR_NO
		    , F.SCHO_NM
		FROM
		    STUDENT A INNER JOIN SCHOLARSHIP_STUDENT B ON (A.STDNT_NO = B.STDNT_NO)
		    INNER JOIN STUDENT_INFORMATION C ON (A.STDNT_NO = C.STDNT_NO)
		    INNER JOIN SCHOLARSHIP D ON (B.SCHLSHIP_NO = D.SCHLSHIP_NO)
		    INNER JOIN SCHOLARSHIP_LIST F ON (D.SCHO_SE = F.SCHO_SE)
		 ORDER BY
            SEMSTR_YEAR DESC, SEMSTR_NO DESC
	</sql>
	
	<!-- 장학생 목록 불러오기 -->
	<select id="selectTotalRecord" resultType="int" parameterType="kr.ac.usu.paging.vo.PaginationInfo">
		SELECT COUNT(*)
		FROM
		(<include refid="listFromFrag" />)
			
		<include refid="searchFrag" />
	</select>
	
	<select id="selectScholarshipStudentList" parameterType="kr.ac.usu.paging.vo.PaginationInfo" resultMap="scholarshipStudentMap">
		SELECT A.*
		FROM (
			SELECT ROWNUM RNUM, B.*
			FROM(
				<include refid="listFromFrag" />
				) B
			<include refid="searchFrag" />
		) A
		<![CDATA[
	    WHERE RNUM >= #{startRow} AND RNUM <= #{endRow}
	    ]]>
	</select>
	
	<!-- 장학생 인적 정보 불러오기 -->
	<select id="selectScholarshipStudentInfo" resultMap="scholarshipStudentMap" parameterType="string">
		SELECT A.*
		FROM (
			SELECT
			    A.STDNT_NO
			    , B.STDNT_NM
			    , TO_CHAR(TO_DATE(B.STDNT_IHIDNUM1,'YY/MM/DD')) STDNT_IHIDNUM1
			    , B.STDNT_IHIDNUM2
			    , B.STDNT_ZIP
			    , B.STDNT_ADRES1
			    , B.STDNT_ADRES2
			    , B.STDNT_TELNO
			    , E1.COM_CODE_NM NLTY_SE
			    , E2.COM_CODE_NM SEXDSTN_SE
			    , B.STDNT_ACNUTNO
			    , B.ATCH_FILE_NO
			    , TO_CHAR(TO_DATE(C.SKNRG_STTUS_ENTSCH,'YY/MM/DD')) SKNRG_STTUS_ENTSCH
			    , E3.COM_CODE_NM SKNRG_STTUS_ENTERENCE_SE
                , E4.COM_CODE_NM BANK_SE
			FROM
			    STUDENT A INNER JOIN STUDENT_INFORMATION B ON(A.STDNT_NO = B.STDNT_NO)
			    INNER JOIN SCHOOL_REGISTER_STATUS C ON(A.STDNT_NO = C.STDNT_NO)
			    INNER JOIN COM_CODE E1 ON (B.NLTY_SE = E1.COM_CODE)
			    INNER JOIN COM_CODE E2 ON (B.SEXDSTN_SE = E2.COM_CODE)
			    INNER JOIN COM_CODE E3 ON (C.SKNRG_STTUS_ENTERENCE_SE = E3.COM_CODE)
                INNER JOIN COM_CODE E4 ON (B.BANK_SE = E4.COM_CODE)
			WHERE
			    E3.COM_CODE_GRP = 'SEC012'
                AND E4.COM_CODE_GRP = 'SEC004'
				AND A.STDNT_NO = #{stdntNo}
		) A
	</select>
	
	<!-- 장학생 학적 정보 불러오기 -->
	<select id="selectScholarshipStudentStatus" resultMap="scholarshipStudentMap" parameterType="string">
		SELECT A.*
		FROM (
			SELECT
			    A.STDNT_NO
			    , D1.SUBJCT_NM SKNRG_STTUS_MAJOR1
			    , D2.SUBJCT_NM SKNRG_STTUS_MAJOR2
			    , D3.SUBJCT_NM SKNRG_STTUS_MINOR
			FROM
			    STUDENT A INNER JOIN SCHOOL_REGISTER_STATUS C ON(A.STDNT_NO = C.STDNT_NO)
			    INNER JOIN SUBJECT D1 ON (C.SKNRG_STTUS_MAJOR1 = D1.SUBJCT_NO)
			    LEFT OUTER JOIN SUBJECT D2 ON (C.SKNRG_STTUS_MAJOR2 = D2.SUBJCT_NO)
			    LEFT OUTER JOIN SUBJECT D3 ON (C.SKNRG_STTUS_MINOR = D3.SUBJCT_NO) 
			WHERE
				A.STDNT_NO = #{stdntNo}
		) A
	</select>
	
	<!-- 장학생 장학 정보 불러오기 -->
	<select id="selectScholarhipStudentScholarship" resultMap="scholarshipStudentMap" parameterType="string">
		SELECT A.*
		FROM (
			SELECT
			    A.STDNT_NO
			    , F.SCHLSHIP_NO
			    , G.SCHLSHIP_AMOUNT
			    , H.SCHO_NM
			    , E4.COM_CODE_NM PYMNT_SE
                , SUBSTR(F.SCHLSHIP_NO,6,4) SEMSTR_YEAR
                , SUBSTR(F.SCHLSHIP_NO,10,1) SEMSTR_NO
			FROM
			    STUDENT A LEFT JOIN SCHOLARSHIP_STUDENT F ON (A.STDNT_NO = F.STDNT_NO)
			    LEFT JOIN SCHOLARSHIP G ON (F.SCHLSHIP_NO = G.SCHLSHIP_NO)
			    LEFT OUTER JOIN SCHOLARSHIP_LIST H ON (G.SCHO_SE = H.SCHO_SE)
			    LEFT OUTER JOIN COM_CODE E4 ON (G.PYMNT_SE = E4.COM_CODE)
			WHERE
			    E4.COM_CODE_GRP = 'SEC025'
				AND A.STDNT_NO = #{stdntNo}
			ORDER BY SEMSTR_YEAR, SEMSTR_NO
		) A
	</select>
	
	<select id="selectScholarshipList" resultMap="scholarshipListMap">
		SELECT
		    A.SCHLSHIP_NO
		    , B.SCHO_NM
		    , A.SCHLSHIP_AMOUNT
		    , C.COM_CODE_NM PYMNT_SE
		    , A.SEMSTR_NO
		    , B.SCHO_SE
		FROM
		    SCHOLARSHIP A INNER JOIN SCHOLARSHIP_LIST B ON(A.SCHO_SE = B.SCHO_SE)
		    INNER JOIN COM_CODE C ON (A.PYMNT_SE = C.COM_CODE)
		    
		WHERE 
		    C.COM_CODE_GRP = 'SEC025'
		    AND A.SEMSTR_NO = (
		        SELECT SEMSTR_NO
		        FROM (
		            SELECT SEMSTR_NO
		            FROM SEMESTER
		            ORDER BY SEMSTR_NO DESC
		        )
		        WHERE ROWNUM = 1
		    )
	</select>
	
	<select id="selectStudentInfo" resultMap="studentMap" parameterType="string">
		SELECT A.*
		FROM (
			SELECT
			    A.STDNT_NO
			    , B.STDNT_NM
			    , B.STDNT_TELNO
                , D.SUBJCT_NM SKNRG_STTUS_MAJOR1
                , C.SKNRG_STTUS_GRADE
                , F.CLG_NM
			FROM
			    STUDENT A INNER JOIN STUDENT_INFORMATION B ON(A.STDNT_NO = B.STDNT_NO)
                INNER JOIN SCHOOL_REGISTER_STATUS C ON (B.STDNT_NO = C.STDNT_NO)
                INNER JOIN SUBJECT D ON (C.SKNRG_STTUS_MAJOR1 = D.SUBJCT_NO)
                INNER JOIN COLLEGE F ON (D.CLG_NO = F.CLG_NO)
			WHERE
			    A.STDNT_NO = #{stdntNo}
		) A
	</select>
	
	<select id="selectScholarshipInfo" resultMap="scholarshipListMap" parameterType="string">
		SELECT
		    B.SCHO_NM
		    , SUBSTR(A.SEMSTR_NO, 1,4) SEMSTR_YEAR
		    , SUBSTR(A.SEMSTR_NO, 5,1) SEMSTR_NO
		    , SUBSTR(A.SCHLSHIP_AMOUNT, 1, LENGTH(A.SCHLSHIP_AMOUNT) - 4) SCHLSHIP_AMOUNT
		    , C.COM_CODE_NM PYMNT_SE
		    , A.SCHLSHIP_NO
		FROM
		    SCHOLARSHIP A INNER JOIN SCHOLARSHIP_LIST B ON(A.SCHO_SE = B.SCHO_SE)
		    INNER JOIN COM_CODE C ON (A.PYMNT_SE = C.COM_CODE)
		WHERE
		    C.COM_CODE_GRP = 'SEC025'
		    AND A.SCHLSHIP_NO = #{schlshipNo}
	</select>
	
	<insert id="insertScholarshipStudent" parameterType="kr.ac.usu.scholarship.vo.ScholarshipStudentVO">
		INSERT INTO SCHOLARSHIP_STUDENT(
		    STDNT_NO
		    , SCHLSHIP_NO
		)
		VALUES(
		    #{stdntNo}
		    , #{schlshipNo}
		)
	</insert>
	
	
	<!-- /////////////////////////////////////////////////////////////////////////////////////////////// -->
	
	<resultMap type="kr.ac.usu.scholarship.vo.ScholarshipRequestVO" id="requestMap" autoMapping="true">
		<association property="scholarship" javaType="kr.ac.usu.scholarship.vo.ScholarshipVO" autoMapping="true">
			<association property="scholarshipList" javaType="kr.ac.usu.scholarship.vo.ScholarshipListVO" autoMapping="true"/>
		</association>
		<association property="student" javaType="kr.ac.usu.user.vo.StudentVO" autoMapping="true">
			<association property="subject" javaType="kr.ac.usu.subject.vo.SubjectVO"></association>
		</association>
	</resultMap>
	
	<sql id="searchRequestFrag">
		<where>
	    	<if test="simpleCondition neq null and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
	    		<choose>
	    			<when test="simpleCondition.searchType2 eq 'schoSe'">
	    				INSTR(SEMSTR_NO, #{simpleCondition.searchWord2}) > 0
	    			</when>
	    			<otherwise>
	    				INSTR(SEMSTR_NO, #{simpleCondition.searchWord}2) > 0
	    			</otherwise>
	    		</choose>
	    	</if>
	    </where>
	</sql>
	
	<sql id="requestListFromFrag">
		SELECT
		    a.schlship_no
		    , a.stdnt_no
		    , b.stdnt_nm
		    , d.scho_nm
		    , a.schlship_reqst_date
		FROM
		    scholarship_request a INNER JOIN student_information b on (a.stdnt_no = b.stdnt_no)
		    LEFT OUTER JOIN scholarship c on (a.schlship_no = c.schlship_no)
		    INNER JOIN scholarship_list d on (c.scho_se = d.scho_se)
	</sql>
	
	<select id="selectRequestTotalRecord" resultType="int" parameterType="kr.ac.usu.paging.vo.PaginationInfo">
		SELECT COUNT(*)
		FROM
		(<include refid="requestListFromFrag" />)
			
		<include refid="searchRequestFrag" />
	</select>
	
	<select id="selectScholarshipRequestStudent" parameterType="kr.ac.usu.paging.vo.PaginationInfo" resultMap="requestMap">
		SELECT A.*
		FROM (
		    SELECT ROWNUM RNUM, B.*
		    FROM(
		        <include refid="requestListFromFrag"></include>
		        ) B
		    <include refid="searchRequestFrag"></include>
		) A
		<![CDATA[
	    WHERE RNUM >= #{startRow} AND RNUM <= #{endRow}
	    ]]>
	</select>
	
	<select id="selectScholarshipSemesterInfo" resultType="kr.ac.usu.scholarship.vo.ScholarshipVO">
		SELECT
		    DISTINCT SUBSTR(semstr_no,1,4) semstr_year
		    ,SUBSTR(semstr_no, 5,1) semstr_no
		FROM
		    scholarship
		ORDER BY
		    semstr_year desc
		    , semstr_no desc
	</select>
	
	
</mapper>





















