<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ac.usu.student.mapper.StudentMypageMapper">

	<resultMap type="kr.ac.usu.user.vo.StudentVO" id="studentMap" autoMapping="true">
		<id property="stdntNo" column="STDNT_NO"/>
		<result property="stdntNo" column="STDNT_NO"/>
		<association property="subject" javaType="kr.ac.usu.subject.vo.SubjectVO" autoMapping="true">
			<association property="college" javaType="kr.ac.usu.facilities.vo.CollegeVO" autoMapping="true"/>
		</association>
		<association property="schoolRegisterHistory" javaType="kr.ac.usu.student.vo.SchoolRegisterHistoryVO" autoMapping="true"/>
	</resultMap>
	
	<!-- 학생 인적 정보 불러오기 -->
	<select id="selectStudentInfo" parameterType="string" resultMap="studentMap">
		SELECT A.*
		FROM (
			SELECT
			    A.STDNT_NO
			    , A.STDNT_PASSWORD
			    , B.STDNT_NM
			    , TO_CHAR(TO_DATE(B.STDNT_IHIDNUM1,'YY/MM/DD')) STDNT_IHIDNUM1
			    , B.STDNT_IHIDNUM2
			    , B.STDNT_ZIP
			    , B.STDNT_ADRES1
			    , B.STDNT_ADRES2
			    , B.STDNT_TELNO
			    , E1.COM_CODE_NM NLTY_SE
			    , E2.COM_CODE_NM SEXDSTN_SE
			    , B.STDNT_ACNUTNO
			    , B.ATCH_FILE_NO
			    , TO_CHAR(TO_DATE(C.SKNRG_STTUS_ENTSCH,'YY/MM/DD')) SKNRG_STTUS_ENTSCH
			    , E3.COM_CODE_NM SKNRG_STTUS_ENTERENCE_SE
                , E4.COM_CODE_NM BANK_SE
                , B.BANK_SE BANK_NO
			FROM
			    STUDENT A INNER JOIN STUDENT_INFORMATION B ON(A.STDNT_NO = B.STDNT_NO)
			    INNER JOIN SCHOOL_REGISTER_STATUS C ON(A.STDNT_NO = C.STDNT_NO)
			    INNER JOIN COM_CODE E1 ON (B.NLTY_SE = E1.COM_CODE)
			    INNER JOIN COM_CODE E2 ON (B.SEXDSTN_SE = E2.COM_CODE)
			    INNER JOIN COM_CODE E3 ON (C.SKNRG_STTUS_ENTERENCE_SE = E3.COM_CODE)
                INNER JOIN COM_CODE E4 ON (B.BANK_SE = E4.COM_CODE)
			WHERE
			    E3.COM_CODE_GRP = 'SEC012'
                AND E4.COM_CODE_GRP = 'SEC004'
				AND A.STDNT_NO = #{studentNo}
		) A
	</select>
	
	<!-- 학생 학적 정보 불러오기 -->
	<select id="selectStudentRegisterStatus" parameterType="string" resultMap="studentMap">
		SELECT A.*
		FROM (
			SELECT
			    A.STDNT_NO
			    , D1.SUBJCT_NM SKNRG_STTUS_MAJOR1
                , E.CLG_NM
                , C.SKNRG_STTUS_GRADE
                , SUBSTR(C.SKNRG_STTUS_ENTSCH,1,2) || '/' || SUBSTR(C.SKNRG_STTUS_ENTSCH,3,2) || '/' || SUBSTR(C.SKNRG_STTUS_ENTSCH,5,2) SKNRG_STTUS_ENTSCH
                , CASE
                    WHEN C.SKNRG_STTUS_GRDTN IS NULL THEN ''
                    ELSE SUBSTR(C.SKNRG_STTUS_GRDTN, 1, 2) || '/' || SUBSTR(C.SKNRG_STTUS_GRDTN, 3, 2) || '/' || SUBSTR(C.SKNRG_STTUS_GRDTN, 5, 2) END SKNRG_STTUS_GRDTN
                , G.COM_CODE_NM SKNRGS_SE
                , D2.SUBJCT_NM SKNRG_STTUS_MAJOR2
			    , D3.SUBJCT_NM SKNRG_STTUS_MINOR
			FROM
			    STUDENT A INNER JOIN SCHOOL_REGISTER_STATUS C ON(A.STDNT_NO = C.STDNT_NO)
			    INNER JOIN SUBJECT D1 ON (C.SKNRG_STTUS_MAJOR1 = D1.SUBJCT_NO)
                INNER JOIN COLLEGE E ON (D1.CLG_NO = E.CLG_NO)
                INNER JOIN SCHOOL_REGISTER_HISTORY F ON (A.STDNT_NO = F.STDNT_NO)
                INNER JOIN COM_CODE G ON (F.SKNRGS_SE = G.COM_CODE)
			    LEFT OUTER JOIN SUBJECT D2 ON (C.SKNRG_STTUS_MAJOR2 = D2.SUBJCT_NO)
			    LEFT OUTER JOIN SUBJECT D3 ON (C.SKNRG_STTUS_MINOR = D3.SUBJCT_NO) 
			WHERE
				A.STDNT_NO = #{studentNo}
                AND G.COM_CODE_GRP = 'SEC009'
            ORDER BY F.SKNRG_HIST_DATE DESC
		) A
        WHERE ROWNUM = 1
	</select>
	
	<!-- 셀렉트박스 불러오기 /////////////////////////////////////////////////////////////// -->
	
	<!-- 공통코드 -->
	<select id="selectComCode" resultType="kr.ac.usu.user.vo.ComCodeVO" parameterType="string">
		SELECT
		    COM_CODE
		    , COM_CODE_NM
		FROM
		    COM_CODE
		WHERE
			COM_CODE_GRP = #{comCodeGrp}
	</select>
	
	<!-- ////////////////////////////////////////////////////////////////////////////// -->

	<!-- 내정보 수정 -->
	<update id="updateMypage" parameterType="kr.ac.usu.user.vo.StudentVO">
		UPDATE student_information
		SET
		    stdnt_zip = #{stdntZip}
		    , stdnt_adres1 = #{stdntAdres1}
		    , stdnt_adres2 = #{stdntAdres2}
		    , stdnt_telno = #{stdntTelno}
		    , bank_se = #{bankSe}
		    , stdnt_acnutno = #{stdntAcnutno}
		WHERE
		    stdnt_no = #{stdntNo}
	</update>
	
	<!-- 비밀번호 수정 -->
	<update id="updatePass" parameterType="kr.ac.usu.user.vo.StudentVO">
		UPDATE student
		SET
		    stdnt_password = #{stdntPassword}
		WHERE
		    stdnt_no = #{stdntNo}
	</update>

</mapper>



























